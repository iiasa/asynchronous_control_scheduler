FROM ubuntu:24.04

ENV GID=99
ENV UID=1000
ENV STORAGE_DRIVER=overlay
ENV STORAGE_ROOT=/home/ubuntu/.local/share/containers/storage

RUN apt update && \
    apt install -y sudo pkg-config cmake libtool autoconf python3-pip git

RUN passwd -l ubuntu
RUN addgroup --gid $GID nonroot
RUN usermod -aG nonroot ubuntu
RUN echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

    
RUN apt-get install -y software-properties-common curl
RUN apt-get install -y buildah 
RUN apt-get install -y skopeo
RUN apt-get install -y fuse-overlayfs
RUN apt-get install -y slirp4netns

RUN apt-get install -y software-properties-common curl
RUN apt-get install -y buildah 
RUN apt-get install -y skopeo
RUN apt-get install -y fuse-overlayfs
RUN apt-get install -y slirp4netns


RUN cat <<EOF > /etc/containers/registries.conf 
unqualified-search-registries = [
  "docker.io",
]

[[registry]]
location="docker.io"
    [[registry.mirror]]
    location="mirror.gcr.io"

[[registry]]
location = "registry:8443"
insecure = true

[engine]
short-name-mode = "permissive"
EOF

# Setup subuid/gid for rootless buildah
RUN rm -rf /etc/subuid && \
    rm -rf /etc/subgid && \
    echo "ubuntu:100000:65536" | tee -a /etc/subuid /etc/subgid

# Switch to ubuntu user
USER ubuntu

# Create and set proper rootless storage directory
RUN mkdir -p /home/ubuntu/.local/share/containers/storage && \
    chmod -R 700 /home/ubuntu/.local && \
    chmod -R 700 /home/ubuntu/.local/share && \
    chmod -R 700 /home/ubuntu/.local/share/containers && \
    chmod -R 700 /home/ubuntu/.local/share/containers/storage

# Buildah storage config check (optional, triggers initialization)
RUN buildah info > /dev/null || true

RUN mkdir /home/ubuntu/app
WORKDIR /home/ubuntu/app

RUN chmod -R 755 /home/ubuntu/app

COPY --chown=ubuntu:nonroot ./requirements /home/ubuntu/app/requirements

RUN pip3 install --upgrade pip --break-system-packages
RUN pip3 install -r /home/ubuntu/app/requirements/dev.txt --break-system-packages

CMD /bin/sh dev_entrypoint.sh


# sudo tee /var/lib/rancher/k3s/agent/etc/containerd/certs.d/registry:8443/hosts.toml > /dev/null <<EOF
# server = "registry:8443"

# [host."http://registry:8443"]
#   capabilities = ["pull", "resolve", "push"]
#   skip_verify = true
#   username = "myregistry"
#   password = "myregistrypassword"
# EOF